<?xml version="1.0" encoding="UTF-8" ?>

<!--
  ~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<AppManager>

    <!--
    JNDI name of the data source to be used by the app management components such as store, publisher, gateway
    This data source should be defined in the master-datasources.xml file in conf/datasources directory.
    -->
    <DataSourceName>jdbc/WSO2AM_DB</DataSourceName>

    <!-- The authorization manager configuration to be used by store / publisher components -->
    <AuthManager>

        <!--
        Server URL of the Authentication service
        -->
        <ServerURL>https://${carbon.local.ip}:${mgt.transport.https.port}/services/</ServerURL>

        <!--
        Admin username for the Authentication manager.
        -->
        <Username>admin</Username>

        <!--
        Admin password for the Authentication manager.
        -->
        <Password>admin</Password>

    </AuthManager>

    <!-- The configuration for app discovery service -->
    <DiscoveryConfiguration>

        <!--
        Configures the discovery handlers.
        Discovery handlers are the ones connecting remote servers and discover the applications
        -->
        <DiscoveryHandlers>
            <!-- List of discovery handlers. name is the key being used. Class is the handler class -->
            <Handler name="WSO2-AS" class="org.wso2.carbon.appmgt.impl.discovery.Wso2AppServerDiscoveryHandler" />
        </DiscoveryHandlers>

    </DiscoveryConfiguration>

    <!--
    Configuration parameters for security handlers of the relevant proxy web apps.
    -->
    <AppConsumerAuthConfiguration>

        <!--
        Enable/Disable JWT generation. Default is false.
        -->
        <EnableTokenGeneration>true</EnableTokenGeneration>

        <!--
        Name of the HTTP header which contains the JWT to be sent to the web app, from the gateway.
        -->
        <SecurityContextHeader>X-JWT-Assertion</SecurityContextHeader>

        <!--
        Fully qualified name of the class that will retrieve additional user claims to be appended to the JWT.
        If not specified no claims will be appended.
        The DefaultClaimsRetriever class adds user claims from the default carbon user store.
        -->
        <ClaimsRetrieverImplClass>org.wso2.carbon.appmgt.impl.token.DefaultClaimsRetriever</ClaimsRetrieverImplClass>

        <!--
        The dialectURI under which the claimURIs that need to be appended to the JWT are defined.
        Not used with custom ClaimsRetriever implementations.
        The same value is used in the keys for appending the default properties to the JWT.
        -->
        <ConsumerDialectURI>http://wso2.org/claims</ConsumerDialectURI>

        <!--
        Signature algorithm for signing the JWT. Accepts "SHA256withRSA" or "NONE".
        To disable signing explicitly specify "NONE".
        -->
        <SignatureAlgorithm>SHA256withRSA</SignatureAlgorithm>

        <!--
        By default all claim values of default claim dialect uri which mapped to the user profile get added to the JWT token.
        By setting "AddClaimsSelectively" attribute to true, publisher can select only required claim attributes to each App and include into JWT token.
        -->
        <AddClaimsSelectively>false</AddClaimsSelectively>

        <!--
        Add SAML response as transport header in outgoing message.
        -->
        <AddSAMLResponseHeaderToOutMessage>true</AddSAMLResponseHeaderToOutMessage>

    </AppConsumerAuthConfiguration>

    <APIGateway>

        <!-- The environments to which an API will be published -->
        <Environments>

            <!-- TODO : Get rid of gateway type -->
            <Environment type="hybrid">

                <Name>Gateway Endpoint</Name>

                <!--
                Server URL of the API gateway.
                -->
                <ServerURL>https://${carbon.local.ip}:${mgt.transport.https.port}/services/</ServerURL>

                <!--
                Admin username for the API gateway.
                -->
                <Username>admin</Username>

                <!--
                Admin password for the API gateway.
                -->
                <Password>admin</Password>

                <!--
                Endpoint URLs for the APIs hosted in this API gateway.
                -->
                <GatewayEndpoint>http://${carbon.local.ip}:${http.nio.port},https://${carbon.local.ip}:${https.nio.port}</GatewayEndpoint>

            </Environment>

        </Environments>

    </APIGateway>

    <!--
    API usage tracker configuration used by the BAM data publisher and
    Google Analytics publisher in API gateway.
    -->
    <Analytics>


        <!--
        This data source is used to write/read UI Activity changes (eg: App Hit count)
        to seperate database. When using BAM to analyze the changes it needs to configure this data source appropriately.
        -->
        <UIActivityPublishDataSourceName>jdbc/WSO2AM_DB</UIActivityPublishDataSourceName>

        <!--
        Enable UI Activity Data publish to BAM
        -->
        <UIActivityBAMPublishEnabled>false</UIActivityBAMPublishEnabled>

        <!--
        Enable/Disable the API usage tracker.
        -->
        <Enabled>false</Enabled>

        <!--
        Enable/Disable Publishing Cache Hit/Miss Statistics
        -->
        <CacheStatsEnabled>false</CacheStatsEnabled>

        <!--
        API Usage Data Publisher.
        -->
        <PublisherClass>org.wso2.carbon.appmgt.usage.publisher.APIMgtUsageDataBridgeDataPublisher</PublisherClass>

        <!--
        Thrift port of the remote BAM server.
        -->
        <ThriftPort>7612</ThriftPort>

        <!--
        Server URL of the remote BAM/CEP server used to collect statistics.
        Must be specified in protocol://hostname:port/ format.

        An event can also be published to multiple Receiver Groups each having 1 or more receivers.
        Receiver Groups are delimited by curly braces whereas receivers are delimited by commas.

        e.g. - Multiple Receivers within a single group
               tcp://localhost:7612/,tcp://localhost:7613/,tcp://localhost:7614/

        e.g. - Multiple Receiver Groups with two receivers each
                 {tcp://localhost:7612/,tcp://localhost:7613},{tcp://localhost:7712/,tcp://localhost:7713/}
        -->
        <BAMServerURL>tcp://localhost:7612/</BAMServerURL>

        <!--
        Administrator username to login to the remote BAM server.
        -->
        <BAMUsername>admin</BAMUsername>

        <!--
        Administrator password to login to the remote BAM server.
        -->
        <BAMPassword>admin</BAMPassword>

        <BAMEventStreams>

            <RequestStreamName>org.wso2.appmgt.statistics.request</RequestStreamName>
            <RequestStreamVersion>1.0.0</RequestStreamVersion>

            <ResponseStreamName>org.wso2.appmgt.statistics.response</ResponseStreamName>
            <ResponseStreamVersion>1.0.0</ResponseStreamVersion>

            <FaultStreamName>org.wso2.appmgt.statistics.fault</FaultStreamName>
            <FaultStreamVersion>1.0.0</FaultStreamVersion>

            <CacheStatStreamName>org.wso2.appmgt.statistics.cache</CacheStatStreamName>
            <CacheStatStreamVersion>1.0.0</CacheStatStreamVersion>

            <!-- Used when publishing AppManager UI activities to BAM   -->
            <UIActivityStreamName>org.wso2.appmgt.bam.uiactivitypublish</UIActivityStreamName>
            <UIActivityStreamVersion>1.0.0</UIActivityStreamVersion>

        </BAMEventStreams>


        <!--
        JNDI name of the data source to be used for getting BAM statistics.
        This data source should be defined in the master-datasources.xml file in conf/datasources directory.
        -->
        <!--DataSourceName>jdbc/WSO2AM_STATS_DB</DataSourceName-->

        <!--
        Google Analytics publisher configuration.
        Create Google Analytics account and obtain a tracking ID.
        Refer http://support.google.com/analytics/bin/answer.py?hl=en&answer=1009694
        -->
        <GoogleAnalyticsTracking>

            <!--
           Enable/Disable Google Analytics Tracking
            -->
            <Enabled>false</Enabled>

            <!--
            Google Analytics Tracking ID
            -->
            <TrackingID>UA-XXXXXXXX-X</TrackingID>

        </GoogleAnalyticsTracking>

    </Analytics>

    <!--
    Settings related to managing API access tiers.
    -->
    <TierManagement>

        <!--
            Enable the providers to expose their APIs over the special 'Unlimited' tier which
            basically disables tier based throttling for the specified APIs.
        -->
        <EnableUnlimitedTier>true</EnableUnlimitedTier>

    </TierManagement>

    <!--
    Use this configuration to control the self-sign-up capability in API store.
    -->
    <SelfSignUp>

        <!--
        Enable or disable the self-sign-up feature.
        -->
        <Enabled>true</Enabled>

        <!--
        Self signed up users should be associated with a suitable subscriber role
        for them to be able to access the API store portal.
        This required parameter specifies which role should be used for that purpose.
        The role specified here must have the '/permission/admin/manage/api/subscribe' permission.
        -->
        <SubscriberRoleName>internal/subscriber</SubscriberRoleName>

        <!--
        This parameter specifies whether the subscriber role specified above
        should be created in the local user store or not.
        This only makes sense when the API subscribers are authenticated against the local user store.
        That is the local Carbon server is acting as the AuthManager.
        If a remote Carbon server is acting as the AuthManager, this parameter should be turned off for the local server.
        -->
        <CreateSubscriberRole>true</CreateSubscriberRole>

    </SelfSignUp>

    <!--Configuration to enable/disable sending CORS headers in the Gateway response
        and define the Access-Control-Allow-Origin header value.-->
    <CORSConfiguration>

        <!--Configuration to enable/disable sending CORS headers from the Gateway-->
        <Enabled>true</Enabled>

        <!--
        The value of the Access-Control-Allow-Origin header.
        Default values are API Store addresses, which is needed for swagger to function.
        -->
        <Access-Control-Allow-Origin>https://localhost:9443,http://localhost:9763</Access-Control-Allow-Origin>

        <!--Configure Access-Control-Allow-Headers-->
        <Access-Control-Allow-Headers>authorization,Access-Control-Allow-Origin,Content-Type</Access-Control-Allow-Headers>

        <!--Configure Access-Control-Allow-Methods-->
        <Access-Control-Allow-Methods>GET,POST,PUT,DELETE,OPTIONS</Access-Control-Allow-Methods>

    </CORSConfiguration>

    <!--
    AppManager uses SAML SSO as default authentication mechanism for the web apps.
    Following configuration defines the configurations of the IDP which is used as the SSO provider.
    -->
    <SSOConfiguration>

        <!-- URL of the IDP use for SSO -->
        <IdentityProviderUrl>https://localhost:9443/samlsso</IdentityProviderUrl>

        <Configurators>
            <Configurator>
                <name>wso2is</name>
                <version>5.0.0</version>
                <providerClass>org.wso2.carbon.appmgt.impl.idp.sso.configurator.IS500SAMLSSOConfigurator</providerClass>
                <parameters>
                    <providerURL>https://localhost:9443</providerURL>
                    <username>admin</username>
                    <password>admin</password>
                </parameters>
            </Configurator>
        </Configurators>

    </SSOConfiguration>

    <!--
    Entitlement service is used to manage entitlement policies and evaluate them upon accessing apps.
    -->
    <EntitlementServiceConfiguration>

        <Parameters>
            <ServerUrl>https://localhost:9443</ServerUrl>
            <Username>admin</Username>
            <Password>admin</Password>
        </Parameters>

    </EntitlementServiceConfiguration>

    <!-- Configuration to handle Mobile apps and MDM. -->
    <MobileAppsConfiguration>

        <MDMConfig>
            <!--
            Enables the catalog mode of the Mobile App Store. If you change the value of this to true,
            the Mobile App Store acts as a catalog, which allows you to view apps. However, it doesn't
            allow you to perform any operations on the apps
            -->
            <Config name="IsCatalog">false</Config>

            <!-- Enables app to download direcly to the mobile device from the App Manager without MDM -->
            <Config name="EnableDirectDownload">false</Config>

            <!-- Enables WSO2 AppM to communicate with the active MDM for performing operations on the mobile apps. -->
            <Config name="EnableMDMOperations">true</Config>

            <!--
            Name of the MDM, which is currently active. You need to define the MDM within the <MDMProperties> element.
            For information on defining a MDM to integrate it with WSO2 AppM, see Integrating a Mobile Device Manager
            -->
            <Config name="ActiveMDM">WSO2MDM_INTERNAL</Config>

            <!-- Ability for users to self-unsubscribe from mobile apps -->
            <Config name="EnableSelfUnsubscription">true</Config>

            <!-- Ability for users to subscribe to mobile apps using mobile devices -->
            <Config name="EnableSubscriptionFromDevices">true</Config>

            <!-- Enables the sample devices for testing purposes -->
            <Config name="EnableSampleDevices">false</Config>

            <!--
            Host of the installation URL of the mobile app, which is sent to the MDM:
            e.g. %http%, %https%, or a custom host URL
            -->
            <Config name="AppDownloadURLHost">%http%</Config>

            <!-- Path of the Property List file generated using the PLIST template for iOS apps. -->
            <Config name="IosPlistPath">publisher/api/mobileapp/getplist</Config>

            <!-- Ability to enable the enterprise-wide operations on mobile apps -->
            <Config name="EnterpriseOperations_Enabled">true</Config>

            <!-- The user role, which has the privileges to perform enterprise-wide operations on mobile apps. -->
            <Config name="EnterpriseOperations_AuthorizedRole">Internal/store-admin</Config>

        </MDMConfig>

        <!-- The properties of the MDMs you need to connect with WSO2 AppM. For information on defining a MDM to integrate it with WSO2 AppM -->
        <MDMProperties>

            <!--
                MDM running on separate JVM. Calls MDM methods via secured REST API. Use this when run Store/Publisher/MDM
                in deployed in separate JVMs. This will be the most suitable active MDM when deployed on production environment.
            -->
            <MDM name="WSO2MDM" bundle="org.wso2.carbon.appmgt.mdm.wso2mdm">
                <Property name="ServerURL">https://localhost:9443</Property>
                <Property name="TokenApiURL">https://localhost:9443/oauth2/token</Property>
                <Property name="ClientKey">11T1dGi_ZicZY2Wn39paDwEBWPAa</Property>
                <Property name="ClientSecret">ahYiZ8qyUr7GX3C7SlArpgIyHkca</Property>
                <Property name="AuthUser">admin</Property>
                <Property name="AuthPass">admin</Property>
            </MDM>

            <!-- Old EMM, Calls EMM using REST API -->
            <MDM name="WSO2EMM" bundle="org.wso2.carbon.appmgt.mdm.wso2emm">
                <Property name="ServerURL">https://localhost:9451</Property>
                <Property name="ImageURL">https://localhost:9451/emm/assets/wso2mobile/img/models/%s.png</Property>
                <Property name="AuthUser">admin</Property>
                <Property name="AuthPass">admin</Property>
            </MDM>

            <!--
                Internal MDM which dispatches the MDM calls as Java/OSGI calls. Use this when run Store/Publisher/MDM
                in on single JVM.
            -->
            <MDM name="WSO2MDM_INTERNAL" bundle="org.wso2.carbon.appmgt.mdm.wso2mdm.direct">
                <Property name="ImageURL">/store/extensions/assets/mobileapp/resources/models/%s.png</Property>
            </MDM>

            <!-- Please uncommnent the following block and define the name in ActiveMDM to activate this MDM -->

            <!--
            <MDM name="WSO2MDM" bundle="org.wso2.carbon.appmgt.mdm.othermdm">
              <Property name="serverUrl">https://localhost:9454</Property>
            </MDM>
            -->
        </MDMProperties>

    </MobileAppsConfiguration>

    <!-- Configuration to secure mobile app services.-->
    <ServicesAPI>
        <AuthorizedRole>admin</AuthorizedRole>
    </ServicesAPI>

</AppManager>
